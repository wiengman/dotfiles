(defwidget bar []
(centerbox :orientation "h"
    (left)
    (music)
    (sidestuff)))

(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
    (metric :label "Volume:"
            :value get_volume
            :onchange "pactl set-sink-volume @DEFAULT_SINK@ {}%")
    (metric :label "RAM:"
            :value {EWW_RAM.used_mem_perc}
            :onchange "")
    (metric :label "Disk:"
            :value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}
            :onchange "")
    time))

(defwidget left []
  (box :class "workspaces"
       :orientation "h"
       :space-evenly true
       :halign "start"
       :spacing 10
    (button :onclick "firefox" "Firefox")
    (button :onclick "alacritty &" "Alacritty")
    (button :onclick "spotify" "Spotify")
    (button :onclick "discord" "Discord")
    (button :onclick "steam" "Steam")
    ))

(defwidget music []
  (box :class "music"
       :orientation "h"
       :space-evenly false
       :halign "center"
    (button :width 40 :height 40 :onclick "playerctl previous" "â—€")
    (button :width 40 :height 40 :onclick "playerctl play-pause" {music != "" ? (music_state =~ "Paused" ? "${music}" : "ðŸŽµ ${music} ðŸŽµ") : ""})
    (button :width 40 :height 40 :onclick "playerctl next" "â–¶")))


(defwidget metric [label value onchange]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)))

(deflisten music :initial ""
  "playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true")

(deflisten music_state :initial ""
  "playerctl status --follow metadata")

(defpoll get_volume :interval "1s"
  "./get_volume.sh"
  )


(defpoll time :interval "10s"
  "date '+%H:%M %b %d, %Y'")

(defwindow bar
  :monitor 1
  :windowtype "normal"
  :exclusive true
  :geometry (geometry :x "0%"
                      :y "5px"
                      :width "99%"
                      :height "40px"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "4%") 
  (bar))
(defwindow bar2
  :monitor 0
  :windowtype "normal"
  :exclusive true
  :geometry (geometry :x "0%"
                      :y "5px"
                      :width "99%"
                      :height "40px"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "4%") 
  (bar))
